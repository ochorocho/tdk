name: tests

on:
  push:
  pull_request:
  schedule:
    - cron: "0 4 * * *"
jobs:
  testsuite:
    name: Tests
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        php: [ '8.1' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: docker-practice/actions-setup-docker@master
      - run: |
          set -x
          docker version

      - name: Validate composer.json and composer.lock
        run: composer validate --no-check-all --no-check-lock

      - name: Install docker
        run: sudo apt update && sudo apt install -y docker

      - name: Install ddev
        run: curl https://apt.fury.io/drud/gpg.key | sudo apt-key add - && echo "deb https://apt.fury.io/drud/ * *" | sudo tee -a /etc/apt/sources.list.d/ddev.list && sudo apt update && sudo apt install -y ddev

      - name: Install dependencies
        # Do a clone here to make sure the repository exists on install
        # to avoid missing repository error in composer.
        run: composer tdk:clone && composer install --no-progress

      - name: phpstan
        run:  ./vendor/bin/phpstan analyse -c .phpstan.neon --no-progress

      - name: php-cs-fixer
        run:  ./vendor/bin/php-cs-fixer fix -v --config=./.php_cs.php --using-cache no --diff --dry-run

      - name: Run acceptance tests
        run: ./vendor/bin/codecept run --html
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: docker-practice/actions-setup-docker@master
      - run: |
          set -x
          docker version
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/gitpod-tdk
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .gitpod/docker/
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
